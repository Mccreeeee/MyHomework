/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xlex;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.awt.Font;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;

/**
 *
 * @author huqingyu18
 */
public class XlexFrame extends javax.swing.JFrame {

    public static int vState = 0;
    public static ArrayList<Vertex> vList = new ArrayList<Vertex>();

    public static boolean isletter(char c) {
        if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
            return true;
        } else {
            return false;
        }
    }

    //预处理函数1，将传入的伪正则表达式，转换成正式的正则表达式
    public static String trans1(String rex) {
        String tmp = "";
        for (int i = 0; i < rex.length(); i++) {
            if (i + 1 < rex.length()) {
                if (isletter(rex.charAt(i)) && (isletter(rex.charAt(i + 1)) || rex.charAt(i + 1) == '(')) {
                    tmp += rex.charAt(i) + "-";
                } else if (rex.charAt(i) == ')' && (rex.charAt(i + 1) == '(' || isletter(rex.charAt(i + 1)))) {
                    tmp += rex.charAt(i) + "-";
                } else if (rex.charAt(i) == '*' && (isletter(rex.charAt(i + 1)) || rex.charAt(i + 1) == '(')) {
                    tmp += rex.charAt(i) + "-";
                } else {
                    tmp += rex.charAt(i);
                }
            } else if (i + 1 == rex.length()) {
                tmp += rex.charAt(i);
            }
        }
        return tmp;
    }

    //预处理函数2，将传入的正则表达式分割成一个个字母
    public static String trans2(String rex) {
        String tmp = "";
        for (int i = 0; i < rex.length(); i++) {
            if (isletter(rex.charAt(i)) && !tmp.contains(String.valueOf(rex.charAt(i)))) {
                tmp += rex.charAt(i);
            }
        }
        Set<Character> sCt = new HashSet<>();
        for (int i = 0; i < tmp.length(); i++) {
            sCt.add(tmp.charAt(i));
        }
        Iterator<Character> it = sCt.iterator();
        String tmp1 = "";
        while (it.hasNext()) {
            tmp1 += it.next();
        }
        return tmp1;
    }

    /**
     * @param args the command line arguments
     */
    // TODO code application logic here
    /**
     * Creates new form XlexFrame
     */
    public XlexFrame() {
        initComponents();
        showresult.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 16));
        this.setTitle("XLEX生成器");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rextext = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        showresult = new javax.swing.JTextArea();
        rextoNFA = new javax.swing.JButton();
        rextoDFA = new javax.swing.JButton();
        minDFA = new javax.swing.JButton();
        tocode = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("正则表达式:");

        showresult.setEditable(false);
        showresult.setColumns(20);
        showresult.setFont(showresult.getFont());
        showresult.setRows(5);
        jScrollPane1.setViewportView(showresult);

        rextoNFA.setText("NFA");
        rextoNFA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rextoNFAActionPerformed(evt);
            }
        });

        rextoDFA.setText("DFA");
        rextoDFA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rextoDFAActionPerformed(evt);
            }
        });

        minDFA.setText("最小化DFA");
        minDFA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minDFAActionPerformed(evt);
            }
        });

        tocode.setText("C++Code");
        tocode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tocodeActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("保存");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tocode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(minDFA, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(rextoDFA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rextoNFA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rextext, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rextext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(rextoNFA)
                        .addGap(48, 48, 48)
                        .addComponent(rextoDFA)
                        .addGap(48, 48, 48)
                        .addComponent(minDFA)
                        .addGap(48, 48, 48)
                        .addComponent(tocode)
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48)
                        .addComponent(jButton2)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rextoNFAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rextoNFAActionPerformed
        // TODO add your handling code here:
        vState = 0;
        vList.clear();
        String s = "";
        s = trans1(rextext.getText());
        Syntax_tree st = new Syntax_tree(s);
        Graph g1 = st.toNFA(st.getRoot());
        Table t1 = new Table(g1, trans2(s) + 'ε');
        String next = "";
        Iterator<String> it = t1.tdatalist2.iterator();
        while (it.hasNext()) {
            next += it.next() + "\n";
        }
        showresult.setText(next);
    }//GEN-LAST:event_rextoNFAActionPerformed

    private void rextoDFAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rextoDFAActionPerformed
        // TODO add your handling code here:
        vState = 0;
        vList.clear();
        String s = "";
        s = trans1(rextext.getText());
        Syntax_tree st = new Syntax_tree(s);
        Graph g1 = st.toNFA(st.getRoot());
        Set<Integer> tmp = g1.closure(g1.start + 1, 'ε');
        //添加初始顶点后tmp即为初始状态
        tmp.add(g1.start + 1);
        //System.out.println(tmp);
        Graph g2 = g1.reflectoDFA(tmp, trans2(s), g1.end);
        Table t1 = new Table(g2, trans2(s));
        String next = "";
        Iterator<String> it = t1.tdatalist2.iterator();
        while (it.hasNext()) {
            next += it.next() + "\n";
        }
        showresult.setText(next);
    }//GEN-LAST:event_rextoDFAActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        showresult.setText("");
        vState = 0;
        vList.clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void minDFAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minDFAActionPerformed
        // TODO add your handling code here:
        String s = "";
        s = trans1(rextext.getText());
        Syntax_tree st = new Syntax_tree(s);
        Graph g1 = st.toNFA(st.getRoot());
        Set<Integer> tmp = g1.closure(g1.start + 1, 'ε');
        //添加初始顶点后tmp即为初始状态
        tmp.add(g1.start + 1);
        //System.out.println(tmp);
        Graph g2 = g1.reflectoDFA(tmp, trans2(s), g1.end);
//        Code min = new Code(g2, trans2(s));
//        Graph g3 = min.tabletoGraph(g2);
        MinimizeDFA minDFA = new MinimizeDFA(g2, trans2(s));
        Table t1 = new Table(minDFA.resultMinDFA, trans2(s));
        String next = "";
        Iterator<String> it = t1.tdatalist2.iterator();
        while (it.hasNext()) {
            next += it.next() + "\n";
        }
        showresult.setText(next);
    }//GEN-LAST:event_minDFAActionPerformed

    private void tocodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tocodeActionPerformed
        // TODO add your handling code here:
        String s = "";
        s = trans1(rextext.getText());
        Syntax_tree st = new Syntax_tree(s);
        Graph g1 = st.toNFA(st.getRoot());
        Set<Integer> tmp = g1.closure(g1.start + 1, 'ε');
        //添加初始顶点后tmp即为初始状态
        tmp.add(g1.start + 1);
        //System.out.println(tmp);
        Graph g2 = g1.reflectoDFA(tmp, trans2(s), g1.end);
        MinimizeDFA minDFA = new MinimizeDFA(g2, trans2(s));
        Code min = new Code(minDFA.resultMinDFA, trans2(s));
        showresult.setText(min.toCode(minDFA.resultMinDFA));
    }//GEN-LAST:event_tocodeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String str = "";
        JFileChooser c = new JFileChooser();
        if (c.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            File f = c.getSelectedFile();
            try {
                FileOutputStream ff = new FileOutputStream(f);
                str = showresult.getText().replace("\n", "\r\n");//获取文本域内容，并将"\n"换成"\r\n"，回车换行一次搞定
                ff.write(str.getBytes());
                ff.flush();
                ff.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // System.out.println(st.toNFA(st.getRoot()));
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XlexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XlexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XlexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XlexFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XlexFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton minDFA;
    private javax.swing.JTextField rextext;
    private javax.swing.JButton rextoDFA;
    private javax.swing.JButton rextoNFA;
    private javax.swing.JTextArea showresult;
    private javax.swing.JButton tocode;
    // End of variables declaration//GEN-END:variables
}
